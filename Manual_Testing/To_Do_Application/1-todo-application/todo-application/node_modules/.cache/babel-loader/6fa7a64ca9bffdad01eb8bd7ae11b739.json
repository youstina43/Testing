{"ast":null,"code":"var _jsxFileName = \"F:\\\\TESTING\\\\Manual testing projects\\\\1-todo-application\\\\todo-application\\\\src\\\\router\\\\Router.js\",\n    _s = $RefreshSig$();\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport LoginPage from '../pages/LoginPage';\nimport SignupPage from '../pages/SignupPage';\nimport TodoPage from '../pages/TodoPage';\nimport NewTodoPage from '../pages/NewTodo';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      children: !user ? /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\",\n      children: !user ? /*#__PURE__*/_jsxDEV(SignupPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/todo/new\",\n      children: user ? /*#__PURE__*/_jsxDEV(NewTodoPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/todo\",\n      children: user ? /*#__PURE__*/_jsxDEV(TodoPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: !user ? /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppRouter, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["F:/TESTING/Manual testing projects/1-todo-application/todo-application/src/router/Router.js"],"names":["Switch","Route","Redirect","useContext","LoginPage","SignupPage","TodoPage","NewTodoPage","AuthContext","AppRouter","user"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAWP,UAAU,CAACK,WAAD,CAA3B;AACA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,gBACG,CAACE,IAAD,gBAAQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAR,gBAAwB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD3B;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAA,gBACG,CAACA,IAAD,gBAAQ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAR,gBAAyB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD5B;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAA,gBACGA,IAAI,gBAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAqB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD5B;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA,gBACGA,IAAI,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAkB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADzB;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAA,gBACG,CAACA,IAAD,gBAAQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAR,gBAAwB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD3B;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArBD;;GAAMD,S;;KAAAA,S;AAuBN,eAAeA,SAAf","sourcesContent":["import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport LoginPage from '../pages/LoginPage';\nimport SignupPage from '../pages/SignupPage';\nimport TodoPage from '../pages/TodoPage';\nimport NewTodoPage from '../pages/NewTodo';\nimport { AuthContext } from '../context/AuthContext';\n\nconst AppRouter = () => {\n  const { user } = useContext(AuthContext);\n  return (\n    <Switch>\n      <Route path=\"/login\">\n        {!user ? <LoginPage /> : <Redirect to=\"/todo\" />}\n      </Route>\n      <Route path=\"/signup\">\n        {!user ? <SignupPage /> : <Redirect to=\"/todo\" />}\n      </Route>\n      <Route path=\"/todo/new\">\n        {user ? <NewTodoPage /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route path=\"/todo\">\n        {user ? <TodoPage /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route path=\"/\" exact>\n        {!user ? <LoginPage /> : <Redirect to=\"/todo\" />}\n      </Route>\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}