{"ast":null,"code":"var _jsxFileName = \"F:\\\\TESTING\\\\Manual testing projects\\\\1-todo-application\\\\todo-application\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const data = localStorage.getItem('user');\n    setUser(JSON.parse(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["F:/TESTING/Manual testing projects/1-todo-application/todo-application/src/context/AuthContext.js"],"names":["useState","createContext","useEffect","AuthContext","AuthProvider","children","user","setUser","data","localStorage","getItem","JSON","parse"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP,OAAO,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACAH,IAAAA,OAAO,CAACI,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAA7B;AAAA,cAAiDF;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CATM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { useState, createContext, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const data = localStorage.getItem('user');\n    setUser(JSON.parse(data));\n  }, []);\n\n  return <AuthContext.Provider value={{ user, setUser }}>{children}</AuthContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}